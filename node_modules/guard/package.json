{
  "_args": [
    [
      {
        "raw": "guard",
        "scope": null,
        "escapedName": "guard",
        "name": "guard",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\OpenServer\\domains\\Test"
    ]
  ],
  "_from": "guard@latest",
  "_id": "guard@0.1.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/guard",
  "_npmUser": {
    "name": "pirxpilot",
    "email": "pirxpilot@code42day.org"
  },
  "_npmVersion": "1.2.30",
  "_phantomChildren": {},
  "_requested": {
    "raw": "guard",
    "scope": null,
    "escapedName": "guard",
    "name": "guard",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/guard/-/guard-0.1.1.tgz",
  "_shasum": "243e7613537920942ccb8244074a9074585bfffe",
  "_shrinkwrap": null,
  "_spec": "guard",
  "_where": "C:\\OpenServer\\domains\\Test",
  "author": {
    "name": "Damian Krzeminski",
    "email": "pirxpilot@code42day.com"
  },
  "bugs": {
    "url": "https://github.com/code42day/guard/issues"
  },
  "dependencies": {},
  "description": "Trivial guard: triggers callback when internal counter reaches 0.",
  "devDependencies": {
    "jshint": "~2",
    "mocha": "~1"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "243e7613537920942ccb8244074a9074585bfffe",
    "tarball": "https://registry.npmjs.org/guard/-/guard-0.1.1.tgz"
  },
  "homepage": "https://github.com/code42day/guard#readme",
  "keywords": [
    "async"
  ],
  "license": "MIT",
  "main": "lib/guard.js",
  "maintainers": [
    {
      "name": "pirxpilot",
      "email": "pirxpilot@code42day.org"
    }
  ],
  "name": "guard",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://secure.travis-ci.org/code42day/guard.png)](http://travis-ci.org/code42day/guard)\n[![NPM version](https://badge.fury.io/js/guard.png)](http://badge.fury.io/js/guard)\n\n# guard \n\nTrivial guard: triggers callback when internal counter reaches 0.\n\n## API\n\nCreate ```guard``` passing callback function. Call ```on()``` and ```off()``` to increase and\ndecrease internal counter.\n\n    g = guard(function() {\n      console.log('Done...')\n    });\n    g.on();\n    g.on();\n    g.off();\n    g.off(); // prints 'Done...'\n\nYou can initialize the counter when creating a new guard.\n\n    g = guard(function() {\n      console.log('Done...')\n    }, 2);\n    g.on();\n    // call off 3 times\n    g.off();\n    g.off();\n    g.off(); // prints 'Done...'\n\n\nIn addition to `done` callback you can setup callbacks when counter reaches a certain value during\n`on` or `off`\n\n    g = guard()\n      .onCallback(100, function() {\n        // called when internal counter is 100 after increment\n      })\n      .offCallback(10, function() {\n        // called when internal counter is 10 after decrement\n      });\n\n## License\n\nMIT\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/code42day/guard.git"
  },
  "scripts": {
    "test": "make test"
  },
  "version": "0.1.1"
}
